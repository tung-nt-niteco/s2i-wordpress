---
kind: Template
apiVersion: v1
metadata:
  name: wordpress-mysql-template.di-reserv-prod
  annotations:
    openshift.io/display-name: "Wordpress 5.0 + MySQL (di-reserv-prod)"
    description: Wordpress application with a persistent MySQL database for OpenShift project "di-reserv-prod"
    tags: quickstart,php,wordpress
    iconClass: icon-php
    template.openshift.io/long-description: This template defines resources needed
      to develop a wordpress application, including a build configuration, application
      deployment configuration, and database deployment configuration.
    template.openshift.io/provider-display-name: Red Hat, Inc.
    template.openshift.io/documentation-url: https://github.com/BonnierNews/wordpress-quickstart
    template.openshift.io/support-url: https://github.com/BonnierNews/s2i-wordpress
message: |-
  The following service(s) have been created in your project: ${NAME}, ${NAME}-${DATABASE_SERVICE_NAME}.

  For more information about using this template, including OpenShift considerations, see https://github.com/BonnierNews/wordpress-quickstart/blob/master/README.md.
labels:
  template: wordpress-mysql-template.di-reserv-prod
  app: "wordpress"
objects:

- kind: Secret
  apiVersion: v1
  metadata:
    name: "${NAME}"
    labels:
      app: "wordpress-${NAME}"
  stringData:
    database-user: "${DATABASE_USER}"
    database-password: "${DATABASE_PASSWORD}"
    database-root-password: "r${DATABASE_PASSWORD}"
    wordpress-auth-key: "${WORDPRESS_AUTH_KEY}"
    wordpress-secure-auth-key: "${WORDPRESS_SECURE_AUTH_KEY}"
    wordpress-logged-in-key: "${WORDPRESS_LOGGED_IN_KEY}"
    wordpress-nonce-key: "${WORDPRESS_NONCE_KEY}"
    wordpress-auth-salt: "${WORDPRESS_AUTH_SALT}"
    wordpress-secure-auth-salt: "${WORDPRESS_SECURE_AUTH_SALT}"
    wordpress-logged-in-salt: "${WORDPRESS_LOGGED_IN_SALT}"
    wordpress-nonce-salt: "${WORDPRESS_NONCE_SALT}"
    k8s-probe: "${K8S_PROBE}"

- kind: Service
  apiVersion: v1
  metadata:
    name: "${NAME}"
    labels:
      app: "wordpress-${NAME}"
    annotations:
      description: Exposes and load balances the application pods
      service.alpha.openshift.io/dependencies: '[{"name": "${NAME}-${DATABASE_SERVICE_NAME}","kind": "Service"}]'
      prometheus.io/scrape: "true"
      prometheus.io/port: "9117"
  spec:
    ports:
    - name: wordpress
      port: 8080
      targetPort: 8080
    - name: exporter
      port: 9117
      targetPort: 9117
    selector:
      name: "${NAME}"

- kind: Route
  apiVersion: v1
  metadata:
    name: "${NAME}"
    labels:
      app: "wordpress-${NAME}"
  spec:
    to:
      kind: Service
      name: "${NAME}"
    tls:
      insecureEdgeTerminationPolicy: Allow
      termination: edge

- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Keeps track of changes in the application image
    labels:
      app: "wordpress-${NAME}"

- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    labels:
      app: "wordpress-${NAME}"
    annotations:
      description: Defines how to build the application
  spec:
    source:
      type: Git
      git:
        uri: "${SOURCE_REPOSITORY_URL}"
        ref: "${SOURCE_REPOSITORY_REF}"
      sourceSecret:
        name: deploy-git-token
      contextDir: "${CONTEXT_DIR}"
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          namespace: "${NAMESPACE}"
          name: wordpress:${WP_VERSION}
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}:latest"
    triggers:
    - type: ImageChange
    - type: ConfigChange
    - type: GitHub
      github:
        secret: "${GITHUB_WEBHOOK_SECRET}"

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${NAME}-web"
    labels:
      app: "wordpress-${NAME}"
    annotations:
      description: Defines how to deploy Wordpress
  spec:
    strategy:
      rollingParams:
        intervalSeconds: 30
        maxSurge: 33%
        maxUnavailable: 33%
        timeoutSeconds: 600
        updatePeriodSeconds: 30
      type: Rolling
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - wordpress
        from:
          kind: ImageStreamTag
          name: "${NAME}:latest"
    - type: ConfigChange
    replicas: 1
    selector:
      name: "${NAME}"
    template:
      metadata:
        name: "${NAME}"
        labels:
          name: "${NAME}"
      spec:
        volumes:
        - name: "${NAME}-data"
          persistentVolumeClaim:
            claimName: "${NAME}-wp-content"
        containers:
        - name: apache-exporter
          image: bonniernews/apache_exporter:latest
          ports:
          - containerPort: 9117
            name: exporter
          args:
            -  --scrape_uri
            - "http://127.0.0.1:8082/server-status/?auto"
        - name: wordpress
          image: " "
          ports:
          - containerPort: 8080
          volumeMounts:
          - name: "${NAME}-data"
            mountPath: "/opt/app-root/wp-content"
          #readinessProbe:
          #  timeoutSeconds: 15
          #  failureThreshold: 4
          #  periodSeconds: 20
          #  successThreshold: 1
          #  initialDelaySeconds: 60
          #  httpGet:
          #    path: "/health.php"
          #    httpHeaders:
          #      - name: X-K8S-PROBE
          #        value: "${K8S_PROBE}"
          #    port: 8080
          #livenessProbe:
          #  timeoutSeconds: 15
          #  failureThreshold: 4
          #  periodSeconds: 20
          #  successThreshold: 1
          #  initialDelaySeconds: 70
          #  httpGet:
          #    path: "/health.php"
          #    httpHeaders:
          #      - name: X-K8S-PROBE
          #        value: "${K8S_PROBE}"
          #    port: 8080
          env:
          - name: WORDPRESS_DB_HOST
            value: "${NAME}-${DATABASE_SERVICE_NAME}"
          - name: DATABASE_ENGINE
            value: "${DATABASE_ENGINE}"
          - name: WORDPRESS_DB_NAME
            value: "${DATABASE_NAME}"
          - name: WORDPRESS_DEBUG
            value: "${WORDPRESS_DEBUG}"
          - name: WORDPRESS_MULTISITE
            value: "${WORDPRESS_MULTISITE}"
          - name: WP_CACHE
            value: "${WP_CACHE}"
          - name: WP_MEMORY_LIMIT
            value: "${WP_MEMORY_LIMIT}"
          - name: WP_MAX_MEMORY_LIMIT
            value: "${WP_MAX_MEMORY_LIMIT}"
          - name: WORDPRESS_DB_USER
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: database-user
          - name: WORDPRESS_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: database-password
          - name: WORDPRESS_AUTH_KEY
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: wordpress-auth-key
          - name: WORDPRESS_SECURE_AUTH_KEY
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: wordpress-secure-auth-key
          - name: WORDPRESS_LOGGED_IN_KEY
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: wordpress-logged-in-key
          - name: WORDPRESS_NONCE_KEY
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: wordpress-nonce-key
          - name: WORDPRESS_AUTH_SALT
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: wordpress-auth-salt
          - name: WORDPRESS_SECURE_AUTH_SALT
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: wordpress-secure-auth-salt
          - name: WORDPRESS_LOGGED_IN_SALT
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: wordpress-logged-in-salt
          - name: WORDPRESS_NONCE_SALT
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: wordpress-nonce-salt
          - name: K8S_PROBE
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: k8s-probe
          - name: OPCACHE_REVALIDATE_FREQ
            value: "${OPCACHE_REVALIDATE_FREQ}"
          - name: OPCACHE_MEMORY_CONSUMPTION
            value: "${OPCACHE_MEMORY_CONSUMPTION}"
          - name: APCU_MEMORY_CONSUMPTION
            value: "${APCU_MEMORY_CONSUMPTION}"
          resources:
            requests:
              memory: "${MEMORY_LIMIT}Mi"
              cpu: 1000m
            limits:
              memory: "${MEMORY_LIMIT}Mi"

- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: "${NAME}-${DATABASE_SERVICE_NAME}"
    labels:
      app: "wordpress-${NAME}"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${VOLUME_CAPACITY}"

- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: "${NAME}-wp-content"
    labels:
      app: "wordpress-${NAME}"
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: "${WORDPRESS_VOLUME_CAPACITY}"
    storageClassName: nfs

- kind: Service
  apiVersion: v1
  metadata:
    name: "${NAME}-${DATABASE_SERVICE_NAME}"
    annotations:
      description: Exposes the database server
      service.alpha.openshift.io/dependencies: '[{"name": "${NAME}-${DATABASE_SERVICE_NAME}","kind": "Service"}]'
      prometheus.io/port: '9104'
      prometheus.io/scrape: 'true'
  spec:
    ports:
    - name: mysql
      port: 3306
      targetPort: 3306
    selector:
      name: "${DATABASE_SERVICE_NAME}"

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${NAME}-database"
    labels:
      app: "wordpress-${NAME}"
    annotations:
      description: Defines how to deploy the database
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - mysql
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: mysql:5.7
    - type: ConfigChange
    replicas: 1
    selector:
      name: "${DATABASE_SERVICE_NAME}"
    template:
      metadata:
        name: "${DATABASE_SERVICE_NAME}"
        labels:
          name: "${DATABASE_SERVICE_NAME}"
          app: "wordpress-${NAME}"
      spec:
        volumes:
        - name: "${DATABASE_SERVICE_NAME}-data"
          persistentVolumeClaim:
            claimName: "${NAME}-${DATABASE_SERVICE_NAME}"
        containers:
        - name: mysqld-exporter
          args:
            -  '--log.level=debug'
          image: 'prom/mysqld-exporter:v0.11.0'
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 9104
            protocol: TCP
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          env:
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: database-user
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: database-password
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: database-root-password
          - name: MYSQL_DATABASE
            value: "${DATABASE_NAME}"
          - name: MYSQL_SERVICE_HOST
            value: "${NAME}-${DATABASE_SERVICE_NAME}"
          - name: MYSQL_SERVICE_PORT
            value: '3306'
          - name: DATA_SOURCE_NAME
            value: root:$(MYSQL_ROOT_PASSWORD)@($(MYSQL_SERVICE_HOST):$(MYSQL_SERVICE_PORT))/$(MYSQL_DATABASE)
        - name: mysql
          image: " "
          ports:
          - containerPort: 3306
          volumeMounts:
          - name: "${DATABASE_SERVICE_NAME}-data"
            mountPath: "/var/lib/mysql/data"
          readinessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 5
            exec:
              command:
              - "/bin/sh"
              - "-i"
              - "-c"
              - MYSQL_PWD='${DATABASE_PASSWORD}' mysql -h 127.0.0.1 -u ${DATABASE_USER}
                -D ${DATABASE_NAME} -e 'SELECT 1'
          livenessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 30
            tcpSocket:
              port: 3306
          env:
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: database-user
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: database-password
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: database-root-password
          - name: MYSQL_DATABASE
            value: "${DATABASE_NAME}"
          resources:
            limits:
              memory: "${MEMORY_MYSQL_LIMIT}Mi"
parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all of the frontend objects defined in this template.
  required: true
- name: WP_VERSION
  displayName: Wordpress version
  description: The version of wordpress to use.
  required: true
  value: 5.0.3-php-7.0
- name: NAMESPACE
  displayName: Namespace
  description: The OpenShift Namespace where the ImageStream resides.
  required: true
  value: di-reserv-prod
- name: MEMORY_LIMIT
  displayName: Memory Limit
  description: Maximum amount of memory in Mi the wordpress container can use.
  required: true
  value: "1024"
- name: MEMORY_MYSQL_LIMIT
  displayName: Memory Limit (MySQL)
  description: Maximum amount of memory in Mi the MySQL container can use.
  required: true
  value: "1024"
- name: VOLUME_CAPACITY
  displayName: MySQL Volume Capacity
  description: Volume space available for MySQL data, e.g. 512Mi, 2Gi
  value: 10Gi
  required: true
- name: WORDPRESS_VOLUME_CAPACITY
  displayName: Wordpress Volume Capacity
  description: Volume space available for Wordpress data, e.g. 512Mi, 2Gi
  value: 10Gi
  required: true
- name: SOURCE_REPOSITORY_URL
  displayName: Git Repository URL
  description: The URL of the repository with your application source code.
  required: true
  value: 'https://github.com/BonnierNews/di-wordpress-failover'
- name: SOURCE_REPOSITORY_REF
  displayName: Git Reference
  description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
- name: CONTEXT_DIR
  displayName: Context Directory
  description: Set this to the relative path to your project if it is not in the root
    of your repository.
- name: GITHUB_WEBHOOK_SECRET
  displayName: GitHub Webhook Secret
  description: A secret string used to configure the GitHub webhook.
  generate: expression
  from: "[a-zA-Z0-9]{40}"
- name: DATABASE_SERVICE_NAME
  displayName: Database Service Name
  required: true
  value: mysql-service
- name: DATABASE_ENGINE
  displayName: Database Engine
  description: 'Database engine: postgresql, mysql or sqlite (default).'
  required: true
  value: mysql
- name: DATABASE_NAME
  displayName: Database Name
  required: true
  value: wordpress
- name: DATABASE_USER
  displayName: Database User
  required: true
  value: wordpress
- name: DATABASE_PASSWORD
  displayName: Database Password
  generate: expression
  from: "[a-zA-Z0-9]{16}"
- name: WORDPRESS_DEBUG
  displayName: Wordpress debug
  description: Enable wordpress debugging.
  value: "false"
- name: WORDPRESS_TABLE_PREFIX
  displayName: Wordpress table prefix
  description: wordpress table prefix
  value: "wp_"
- name: WORDPRESS_MULTISITE
  displayName: Enable Wordpress multisite functionality
  description: Adds config to wp-config for multisite.
  value: "false"
- name: WORDPRESS_AUTH_KEY
  displayName: Wordpress auth token
  description: Set this to a long random string.
  generate: expression
  from: "[\\w]{50}"
- name: WORDPRESS_SECURE_AUTH_KEY
  displayName: Wordpress Secure Auth key
  description: Set this to a long random string.
  generate: expression
  from: "[\\w]{50}"
- name: WORDPRESS_NONCE_KEY
  displayName: Wordpress Nonce Key
  description: Set this to a long random string.
  generate: expression
  from: "[\\w]{50}"
- name: WORDPRESS_AUTH_SALT
  displayName: Wordpress Auth Salt
  description: Set this to a long random string.
  generate: expression
  from: "[\\w]{50}"
- name: WORDPRESS_LOGGED_IN_KEY
  displayName: Wordpress Logged In key
  description: Set this to a long random string.
  generate: expression
  from: "[\\w]{50}"
- name: WORDPRESS_SECURE_AUTH_SALT
  displayName: Wordpress Secure Auth Salt
  description: Set this to a long random string.
  generate: expression
  from: "[\\w]{50}"
- name: WORDPRESS_LOGGED_IN_SALT
  displayName: Wordpress Logged In Salt
  description: Set this to a long random string.
  generate: expression
  from: "[\\w]{50}"
- name: WORDPRESS_NONCE_SALT
  displayName: Wordpress Nonce Salt
  description: Set this to a long random string.
  generate: expression
  from: "[\\w]{50}"
- name: K8S_PROBE
  displayName: HTTP Header for probe
  description: String used for HTTP Health probes.
  generate: expression
  from: "[a-zA-Z0-9]{16}"
- name: OPCACHE_REVALIDATE_FREQ
  displayName: OPcache Revalidation Frequency
  description: How often to check script timestamps for updates, in seconds. 0 will result in OPcache checking for updates on every request.
  value: "2"
- name: OPCACHE_MEMORY_CONSUMPTION
  displayName: OPcache memory size in Mi.
  description: Size of the in-memory OPCache.
  value: "128"
- name: APCU_MEMORY_CONSUMPTION
  displayName: APCU memory size in Mi.
  description: Size of the in-memory APCU Cache.
  value: "128"
- name: WP_MEMORY_LIMIT
  displayName: Wordpress memory
  description: Size of the wordpress memory
  value: "256M"
- name: WP_MAX_MEMORY_LIMIT
  displayName: Wordpress max memory
  description: Size of the wordpress max  memory
  value: "256M"
- name: WP_CACHE
  displayName: Use advanced-cache.php
  description: Enable caching
  value: "false"